openapi: 3.0.0
info:
  title: 'Todo API'
  version: '0.1'
servers:
  -
    url: 'http://localhost'
    description: 로컬
paths:
  /api/v1/register:
    post:
      tags:
        - 회원가입
      summary: 회원가입
      description: '이메일을 통한 회원가입'
      operationId: d6bd719d212a86f75a0ff61091dbdf21
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  description: '(필수)사용자 이름'
                  type: string
                  example: 변백현
                email:
                  description: '(필수)사용자 이메일'
                  type: string
                  example: example@jiran.com
                password:
                  description: '(필수)사용자 비밀번호'
                  type: string
                  format: password
                  example: todo1234!!
                password_confirmation:
                  description: '(필수)사용자 비밀번호 확인'
                  type: string
                  format: password
                  example: todo1234!!
              type: object
      responses:
        '201':
          description: 성공
          content:
            application/json:
              schema:
                properties:
                  result: { description: '성공 여부', type: string }
                type: object
              example:
                result: success
        '403':
          description: '이미 존재하는 사용자 이메일'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAbort'
  /api/v1/withdrawal:
    delete:
      tags:
        - 회원가입
      summary: 회원탈퇴
      description: 탈퇴
      operationId: 6e513a4df2a97cb098fe647207225f0a
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                password:
                  description: '(필수)사용자 비밀번호'
                  type: string
                  format: password
                  example: todo1234!!
              type: object
      responses:
        '201':
          description: 성공
          content:
            application/json:
              schema:
                properties:
                  result: { description: '성공 여부', type: string }
                type: object
              example:
                result: success
        '403':
          description: '비밀번호가 일치하지 않음'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAbort'
  /api/v1/routines:
    get:
      tags:
        - 루틴
      summary: '루틴 리스트 조회'
      description: '루틴 리스트 조회'
      operationId: 6f4b99b6a840eac418ea0f6f4614f133
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                properties:
                  routines: { description: '루틴 리스트', type: array, items: { properties: { id: { description: '루틴 번호', type: integer }, contents: { description: '일정 내용', type: string }, user_id: { description: '사용자 번호', type: integer }, type: { description: '월간(날짜기준)반복, 주간(요일기준)반복 구분', type: string, enum: [month, week] }, schedules: { description: '날짜, 요일 정보', properties: { dates: { description: '날짜 목록', type: array, items: { type: integer } }, days_of_week: { description: '요일 목록', type: array, items: { type: string, enum: [mon, tue, wed, thu, fri, sat, sun] } } }, type: object }, start_date: { description: '시작 일자', type: string }, end_date: { description: '종료 일자', type: string }, tags: { description: 태그, properties: { id: { description: '태그 번호', type: integer }, name: { description: '태그 이름', type: string }, position: { description: 우선순위, type: integer }, color: { description: '색깔 hexColor', type: string } }, type: object } }, type: object } }
                type: object
              example:
                routines:
                  - { id: 1, contents: '5일마다 할일', user_id: 11, type: month, schedules: { dates: [5, 10, 15, 20, 25, 30], days_of_week: [] }, tag_id: 3, start_date: '2022-12-09', end_date: '2022-12-20', tag: { id: 1, name: dolorum, position: 0, color: '#5f9d13' } }
                  - { id: 7, contents: '월, 화요일에 할 일', user_id: 11, type: week, schedules: { dates: [], days_of_week: [mon, tue] }, tag_id: 1, start_date: '2022-12-09', end_date: null, tag: { id: 1, name: dolorum, position: 0, color: '#5f9d13' } }
      security:
        -
          auth: []
    post:
      tags:
        - 루틴
      summary: '루틴 생성'
      description: '새로운 루틴 생성'
      operationId: 443061fe2238d4ba22520868adb2e505
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                contents:
                  description: (필수)일정
                  type: string
                  example: 병원가기
                start_date:
                  description: '(필수)시작 일자(루틴을 시작할 일자)'
                  type: string
                  example: '2022-11-23'
                end_date:
                  description: '(선택)종료 일자'
                  type: string
                  example: '2022-11-23'
                tag_id:
                  description: '(선택)태그 번호'
                  type: integer
                  example: 1
                type:
                  description: '(필수)월간(날짜기준)반복, 주간(요일기준)반복 구분'
                  type: string
                  enum: [month, week]
                  example: week
                schedules:
                  description: '(필수)날짜, 요일 정보'
                  properties: { dates: { description: '(선택)날짜 목록', type: array, items: { type: integer, example: 1 } }, days_of_week: { description: '(선택)요일 목록', type: array, items: { type: string, enum: [mon, tue, wed, thu, fri, sat, sun], example: mon } } }
                  type: object
              type: object
      responses:
        '201':
          description: 성공
          content:
            application/json:
              schema:
                properties:
                  result: { description: '성공 여부', type: string }
                type: object
              example:
                result: success
        '403':
          description: '기타 오류'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAbort'
      security:
        -
          auth: []
  '/api/v1/routines/{routine_id}':
    get:
      tags:
        - 루틴
      summary: '루틴 상세보기'
      description: '루틴 개별 상세보기'
      operationId: 90832662ebc4e90017545f8c9dfb09cf
      parameters:
        -
          name: routine_id
          in: path
          description: '루틴 번호'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                properties:
                  id: { description: '루틴 번호', type: string }
                  contents: { description: '루틴 내용', type: string }
                  user_id: { description: '사용자 번호', type: integer }
                  start_date: { description: '시작 일자', type: string }
                  end_date: { description: '종료 일자', type: string }
                  type: { description: '월간(날짜기준)반복, 주간(요일기준)반복 구분', type: string, enum: [month, week] }
                  schedules: { description: '날짜, 요일 정보', properties: { dates: { description: '날짜 목록', type: array, items: { type: integer } }, days_of_week: { description: '요일 목록', type: array, items: { type: string, enum: [mon, tue, wed, thu, fri, sat, sun] } } }, type: object }
                  tags: { description: 태그, properties: { id: { description: '태그 번호', type: integer }, name: { description: '태그 이름', type: string }, position: { description: 우선순위, type: integer }, color: { description: '색깔 hexColor', type: string } }, type: object }
                type: object
              example:
                id: 1
                contents: '오늘의 일정'
                date: '2022-11-23'
                done: false
                dead_line: '2022-11-25T01:00:00.000000Z'
                complete_time: null
                tags:
                  id: 1
                  name: 운동
                  position: 0
                  color: '#5ac7ca'
        '403':
          description: '일정이 존재하지 않음'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAbort'
      security:
        -
          auth: []
    put:
      tags:
        - 루틴
      summary: '루틴 수정'
      description: '기존 루틴 수정'
      operationId: 989c168790a772e7aee0d0f88fdb568b
      parameters:
        -
          name: routine_id
          in: path
          description: '루틴 번호'
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                contents:
                  description: (필수)일정
                  type: string
                  example: 병원가기
                start_date:
                  description: '(필수)시작 일자(루틴을 시작할 일자)'
                  type: string
                  example: '2022-11-23'
                end_date:
                  description: '(선택)종료 일자'
                  type: string
                  example: '2022-11-23'
                tag_id:
                  description: '(선택)태그 번호'
                  type: integer
                  example: 1
                type:
                  description: '(필수)월간(날짜기준)반복, 주간(요일기준)반복 구분'
                  type: string
                  enum: [month, week]
                  example: week
                schedules:
                  description: '(필수)날짜, 요일 정보'
                  properties: { dates: { description: '(선택)날짜 목록', type: array, items: { type: integer, example: 1 } }, days_of_week: { description: '(선택)요일 목록', type: array, items: { type: string, enum: [mon, tue, wed, thu, fri, sat, sun], example: mon } } }
                  type: object
              type: object
      responses:
        '201':
          description: 성공
          content:
            application/json:
              schema:
                properties:
                  result: { description: '성공 여부', type: string }
                type: object
              example:
                result: success
        '403':
          description: '기타 오류'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAbort'
      security:
        -
          auth: []
    delete:
      tags:
        - 루틴
      summary: '루틴 삭제'
      description: '루틴 개별 삭제'
      operationId: e0971eda6d604355177970a8d59d61d4
      parameters:
        -
          name: routine_id
          in: path
          description: '루틴 번호'
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: 성공
          content:
            application/json:
              schema:
                properties:
                  result: { description: '성공 여부', type: string }
                type: object
              example:
                result: success
      security:
        -
          auth: []
  /api/v1/tags:
    get:
      tags:
        - 태그
      summary: '태그 리스트 조회'
      description: '태그 리스트 조회'
      operationId: 49b8aae23d92f665318c3273cb54ec75
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                properties:
                  tags: { description: '태그 리스트', type: array, items: { properties: { id: { description: '태그 번호', type: integer }, name: { description: 이름, type: string }, position: { description: 우선순위, type: integer }, color: { description: hexColor, type: string } }, type: object } }
                type: object
              example:
                tags:
                  - { id: 1, name: 운동, position: 0, color: '#5ac7ca' }
                  - { id: 2, name: 독서, position: 1, color: '#111111' }
      security:
        -
          auth: []
    post:
      tags:
        - 태그
      summary: '태그 생성'
      description: '새로운 태그 생성'
      operationId: 9e21dd3b04a3e4b23f12a3ce0de8c7e5
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  description: (필수)이름
                  type: string
                  example: 공부
                color:
                  description: (선택)hexColor
                  type: string
                  example: '#000000'
              type: object
      responses:
        '201':
          description: 성공
          content:
            application/json:
              schema:
                properties:
                  result: { description: '성공 여부', type: string }
                type: object
              example:
                result: success
      security:
        -
          auth: []
  '/api/v1/tags/{tag_id}':
    get:
      tags:
        - 태그
      summary: '태그 상세보기'
      description: '태그 개별 상세보기'
      operationId: 361ad3847c2cd195b9fa30fc28098469
      parameters:
        -
          name: tag_id
          in: path
          description: '태그 번호'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                properties:
                  id: { description: '태그 번호', type: string }
                  name: { description: '태그 이름', type: string }
                  position: { description: 우선순위, type: integer }
                  color: { description: hexColor, type: string }
                type: object
              example:
                id: 1
                name: 운동
                position: 0
                color: '#5ac7ca'
        '403':
          description: '태그가 존재하지 않음'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAbort'
      security:
        -
          auth: []
    put:
      tags:
        - 태그
      summary: '태그 수정'
      description: '기존 태그 수정'
      operationId: 9a54b500c4247b8ee01adeeb4f170945
      parameters:
        -
          name: tag_id
          in: path
          description: '태그 번호'
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  description: (선택)이름
                  type: string
                  example: 공부
                position:
                  description: (선택)우선순위
                  type: integer
                  example: 3
                color:
                  description: (선택)hexColor
                  type: string
                  example: '#000000'
              type: object
      responses:
        '201':
          description: 성공
          content:
            application/json:
              schema:
                properties:
                  result: { description: '성공 여부', type: string }
                type: object
              example:
                result: success
        '403':
          description: '태그가 존재하지 않음'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAbort'
      security:
        -
          auth: []
    delete:
      tags:
        - 태그
      summary: '태그 삭제'
      description: '태그 개별 삭제'
      operationId: 2d95536bf0999aa001a8f791656985d7
      parameters:
        -
          name: tag_id
          in: path
          description: '태그 번호'
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: 성공
          content:
            application/json:
              schema:
                properties:
                  result: { description: '성공 여부', type: string }
                type: object
              example:
                result: success
      security:
        -
          auth: []
  '/api/v1/tags?period={period}&date={date}':
    get:
      tags:
        - 알정
      summary: '단위기간별 일정 조회'
      description: '일간, 주간 월간 단위기간별 일정 조회'
      operationId: 118753c9f2fdf393a2631e100ba5db18
      parameters:
        -
          name: period
          in: path
          description: 단위기간
          required: true
          schema:
            type: string
            enum:
              - agent_name
              - os
              - ip
              - version
        -
          name: date
          in: path
          description: '조회 기준일(기준일이 포함된 일/주/월 조회)'
          required: true
          schema:
            type: string
        -
          name: tag_ids
          in: path
          description: '태그 번호'
          required: false
          schema:
            type: array
            items: {  }
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                properties:
                  start_date: { description: '단위 기간 시작일', type: string }
                  end_date: { description: '단위 기간 종료일', type: string }
                  tasks: { description: '일정 리스트', type: array, items: { properties: { id: { description: '일정 번호', type: integer }, contents: { description: '일정 내용', type: string }, done: { description: '완료 여부', type: boolean }, dead_line: { description: 기한, type: string }, complete_time: { description: '완료 시간', type: string }, date: { description: 날짜, type: string }, tag_id: { description: '태그 번호', type: string }, tag_name: { description: '태그 이름', type: string }, position: { description: 우선순위, type: integer }, color: { description: hexColor, type: string } }, type: object } }
                type: object
              example:
                tags:
                  - { id: 1, contents: '오늘의 할일', done: false, dead_line: '2022-12-10T01:00:00.000000Z', complete_time: null, date: '2022-12-05', tag_id: 3, tag_name: 운동, position: 1, color: '#355921' }
                  - { id: 7, contents: '12월 8일의 할일', done: true, dead_line: null, complete_time: null, date: '2022-12-08', tag_id: 2, tag_name: 어학, position: 0, color: '#70b0eb' }
      security:
        -
          auth: []
  /api/v1/tasks:
    post:
      tags:
        - 일정
      summary: '일정 생성'
      description: '새로운 일정 생성'
      operationId: 379ae513b47f83882f91f2b9143fc425
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                contents:
                  description: (필수)일정
                  type: string
                  example: 병원가기
                date:
                  description: (필수)날짜
                  type: string
                  example: '2022-11-23'
                tag_id:
                  description: '(선택)태그 번호'
                  type: integer
                  example: 1
                dead_line:
                  description: '(선택)완료 예정 시간'
                  type: string
                  example: '2022-11-23 16:30:00'
              type: object
      responses:
        '201':
          description: 성공
          content:
            application/json:
              schema:
                properties:
                  result: { description: '성공 여부', type: string }
                type: object
              example:
                result: success
        '403':
          description: '기타 오류'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAbort'
      security:
        -
          auth: []
  '/api/v1/tasks/{task_id}':
    get:
      tags:
        - 일정
      summary: '일정 상세보기'
      description: '일정 개별 상세보기'
      operationId: 4e3556e3af607bb1b41003c3f8f5e7f1
      parameters:
        -
          name: task_id
          in: path
          description: '일정 번호'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                properties:
                  id: { description: '일정 번호', type: string }
                  contents: { description: '일정 내용', type: string }
                  date: { description: 날짜, type: string }
                  done: { description: '완료 여부', type: boolean }
                  dead_line: { description: 기한, type: string }
                  complete_time: { description: 완료시간, type: string }
                  tags: { description: 태그, properties: { id: { description: '태그 번호', type: integer }, name: { description: '태그 이름', type: string }, position: { description: 우선순위, type: integer }, color: { description: '색깔 hexColor', type: string } }, type: object }
                type: object
              example:
                id: 1
                contents: '오늘의 일정'
                date: '2022-11-23'
                done: false
                dead_line: '2022-11-25T01:00:00.000000Z'
                complete_time: null
                tags:
                  id: 1
                  name: 운동
                  position: 0
                  color: '#5ac7ca'
        '403':
          description: '일정이 존재하지 않음'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAbort'
      security:
        -
          auth: []
    put:
      tags:
        - 일정
      summary: '일정 수정'
      description: '기존 일정 수정'
      operationId: 262058e14947c763dc200ce0eb96544b
      parameters:
        -
          name: task_id
          in: path
          description: '일정 번호'
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                contents:
                  description: (필수)일정
                  type: string
                  example: 병원가기
                date:
                  description: (필수)날짜
                  type: string
                  example: '2022-11-23'
                tag_id:
                  description: '(선택)태그 번호'
                  type: integer
                  example: 1
                dead_line:
                  description: '(선택)완료 예정 시간'
                  type: string
                  example: '2022-11-23 16:30:00'
                done:
                  description: '(선택)완료 여부'
                  type: boolean
                  example: false
              type: object
      responses:
        '201':
          description: 성공
          content:
            application/json:
              schema:
                properties:
                  result: { description: '성공 여부', type: string }
                type: object
              example:
                result: success
        '403':
          description: '기타 오류'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAbort'
      security:
        -
          auth: []
    delete:
      tags:
        - 일정
      summary: '일정 삭제'
      description: '일정 개별 삭제'
      operationId: 54971697b5795ee914b85f976ecdc1c3
      parameters:
        -
          name: task_id
          in: path
          description: '일정 번호'
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: 성공
          content:
            application/json:
              schema:
                properties:
                  result: { description: '성공 여부', type: string }
                type: object
              example:
                result: success
      security:
        -
          auth: []
  '/api/v1/tasks/{task_id}/done':
    put:
      tags:
        - 일정
      summary: '일정 완료 등록'
      description: '기존 일정 완료/미완료 표기 변경'
      operationId: 0514dc358c55177d49e0cbda6acff643
      parameters:
        -
          name: task_id
          in: path
          description: '일정 번호'
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                done:
                  description: '(필수)완료 여부'
                  type: boolean
                  example: false
              type: object
      responses:
        '201':
          description: 성공
          content:
            application/json:
              schema:
                properties:
                  result: { description: '성공 여부', type: string }
                type: object
              example:
                result: success
        '403':
          description: '기타 오류'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAbort'
      security:
        -
          auth: []
  /api/v1/login:
    post:
      tags:
        - 로그인
      summary: 로그인
      description: '이메일을 통한 로그인'
      operationId: d7d51829be22c07b1dbdeca806fd4354
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                email:
                  description: '(필수)사용자 이메일'
                  type: string
                  example: example@jiran.com
                password:
                  description: '(필수)사용자 비밀번호'
                  type: string
                  format: password
                  example: todo1234!!
              type: object
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                properties:
                  user_id: { description: '사용자 번호', type: integer }
                  token: { description: 'JWT 토큰', type: string }
                  token_type: { description: '토큰 유형', type: string }
                  expired_at: { description: '토큰 만료시간', type: string }
                type: object
              example:
                user_id: 1
                token: eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NiJ9.eyJpc3MiOiJvZmZpY2V3YXZlLWFwaSIsImlhdCI6MTY2ODM5MDk3NSwiZXhwIjpudWxsLCJ1c2VyX2lkIjoxMSwiZW1haWwiOiJ0ZXN0QGV4YW1wbGUuY29tIiwibmFtZSI6ImplYW4ifQ.9M_yhzpY86QBg57yF3AfqxjfHkMPmps9ukzcNbfXEP0JLlM4dD5VDqm-HU1JHE0guWCAiCOIbUpm0nhccN5yPw
                token_type: Bearer
                expired_at: '2022-11-16 11:44:51'
        '403':
          description: '유효하지 않은 요청'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAbort'
  /api/v1/logout:
    post:
      tags:
        - 로그인
      summary: 로그아웃
      description: 로그아웃
      operationId: 95c20f5153ad6cbd9a7de701fdef9493
      responses:
        '201':
          description: 성공
          content:
            application/json:
              schema:
                properties:
                  result: { description: '성공 여부', type: string }
                type: object
              example:
                result: success
  /api/v1/profile:
    get:
      tags:
        - 사용자
      summary: '사용자 프로필 조회'
      operationId: 51a8c66871649e306d393938ca1ad8e2
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                properties:
                  name: { description: 이름, type: string }
                  email: { description: 이메일, type: string }
                  status_message: { description: 상태메세지, type: string }
                type: object
              example:
                name: jean
                email: test@example.com
                status_message: null
      security:
        -
          auth: []
    put:
      tags:
        - 사용자
      summary: '사용자 정보 수정'
      description: '사용자 정보 수정'
      operationId: 4b3bbd32d79667b5eb02ef9a1224bd7a
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  description: (선택)이름
                  type: string
                  example: 김수현
                status_message:
                  description: (선택)상태메세지
                  type: string
                  example: '오늘도 화이팅~'
                delete_status_message:
                  description: '(필수)상태메세지 삭제 여부'
                  type: boolean
              type: object
      responses:
        '201':
          description: 성공
          content:
            application/json:
              schema:
                properties:
                  result: { description: '성공 여부', type: string }
                type: object
              example:
                result: success
      security:
        -
          auth: []
  /api/v1/profile/password:
    put:
      tags:
        - 사용자
      summary: '비밀번호 수정'
      description: '사용자 비밀번호 수정'
      operationId: c3f53ecd4c50e70dbcf43b69162f3ea6
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                current_password:
                  description: '(필수)현재 비밀번호'
                  type: string
                  example: todo1234!!
                new_password:
                  description: '(필수)변경할 비밀번호'
                  type: string
                  example: todo4321!!!
                new_password_confirmation:
                  description: '(필수)변경할 비밀번호 확인'
                  type: string
                  example: todo4321!!!
              type: object
      responses:
        '201':
          description: 성공
          content:
            application/json:
              schema:
                properties:
                  result: { description: '성공 여부', type: string }
                type: object
              example:
                result: success
        '403':
          description: '기타 오류'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseAbort'
      security:
        -
          auth: []
components:
  schemas:
    ResponseAbort:
      description: '잘못된 요청'
      properties:
        message:
          description: '에러 메시지'
          type: string
          example: '잘못된 요청입니다.'
      type: object
tags:
  -
    name: 로그인
    description: 로그인/로그아웃
  -
    name: 회원가입
    description: 회원가입
  -
    name: 사용자
    description: '사용자 정보'
  -
    name: 일정
    description: '일정 관련 api'
  -
    name: 태그
    description: '태그 관련 api'
  -
    name: 루틴
    description: '루틴 관련 api'
